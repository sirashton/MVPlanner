{
  "name": "Project Planner VS Code Extension",
  "description": "A VS Code extension for interactive project planning and TODO integration",
  "status": "In Progress",
  "mscw": "Must",
  "subtasks": [
    {
      "name": "Setup Development Environment",
      "description": "Set up the initial project structure and development tools",
      "status": "Complete",
      "mscw": "Must",
      "subtasks": [
        {
          "name": "Initialize VS Code Extension project",
          "description": "Create the basic extension structure using VS Code's yeoman generator",
          "status": "Complete",
          "mscw": "Must"
        },
        {
          "name": "Set up TypeScript configuration",
          "description": "Configure TypeScript for the project",
          "status": "Complete",
          "mscw": "Must"
        },
        {
          "name": "Set up testing framework",
          "description": "Integrate a testing framework for TDD approach",
          "status": "Not Started",
          "mscw": "Should"
        }
      ]
    },
    {
      "name": "Implement Plan Viewer",
      "description": "Create the interactive plan viewing and editing interface",
      "status": "In Progress",
      "mscw": "Must",
      "subtasks": [
        {
          "name": "User can view the plan",
          "description": "Create wireframes and design for the Plan Viewer interface",
          "status": "Not Started",
          "mscw": "Must",
          "subtasks": [
            {
              "name": "The plan is nicely formatted",
              "description": "The plan is nicely formatted",
              "status": "Not Started",
              "mscw": "Must"
            },
            {
              "name": "Infer the status of a task based on its subtasks",
              "description": "Done all we must, done all we should...",
              "status": "Not Started",
              "mscw": "Should"
            },
            {
              "name": "User can filter the plan",
              "description": "User can filter the plan by status, MSCW, etc.",
              "status": "Not Started",
              "mscw": "Should"
            }
          ]
        },
        {
          "name": "Integrate Plan Viewer with VS Code WebView",
          "description": "Set up the WebView to host the Plan Viewer in VS Code",
          "status": "Complete",
          "mscw": "Must"
        },
        {
          "name": "Implement plan.json parsing and rendering",
          "description": "Create functionality to read and display plan.json data",
          "status": "Complete",
          "mscw": "Must"
        },
        {
          "name": "User can edit the plan",
          "description": "",
          "status": "In Progress",
          "mscw": "Must",
          "subtasks": [
            {
              "name": "Implement task creation and deletion",
              "description": "Add functionality to create new tasks and delete existing ones",
              "status": "Not Started",
              "mscw": "Must"
            },
            {
              "name": "Implement task status editing",
              "description": "Add functionality to edit the status of tasks",
              "status": "Complete",
              "mscw": "Must"
            },
            {
              "name": "Implement MSCW editing",
              "description": "Add functionality to edit the MSCW of tasks",
              "status": "Complete",
              "mscw": "Must"
            },
            {
              "name": "User can re-name tasks",
              "description": "Add functionality to re-name tasks and descriptions",
              "status": "Not Started",
              "mscw": "Must"
            },
            {
              "name": "Implement re-structuring of tasks",
              "description": "Add functionality to re-structure tasks",
              "status": "Not Started",
              "mscw": "Should",
              "subtasks": [
                {
                  "name": "Button based re-structuring",
                  "description": "Move button, move to here button, etc.",
                  "status": "Not Started",
                  "mscw": "Should"
                },
                {
                  "name": "Drag and drop re-structuring",
                  "description": "Allow tasks to be re-structured via drag and drop",
                  "status": "Not Started",
                  "mscw": "Could"
                }
              ]
            }
          ]
        },
        {
          "name": "Implement task creation and deletion",
          "description": "Add functionality to create new tasks and delete existing ones",
          "status": "Not Started",
          "mscw": "Must"
        }
      ]
    },
    {
      "name": "Develop TODO Linter",
      "description": "Create the TODO comment linting functionality",
      "status": "Not Started",
      "mscw": "Must",
      "subtasks": [
        {
          "name": "Implement TODO parsing logic",
          "description": "Develop functionality to parse TODO comments from code files",
          "status": "Not Started",
          "mscw": "Must"
        },
        {
          "name": "Create plan.json comparison logic",
          "description": "Develop logic to compare TODOs with tasks in plan.json",
          "status": "Not Started",
          "mscw": "Must"
        },
        {
          "name": "Integrate linter with VS Code diagnostics",
          "description": "Set up the linter to report issues through VS Code's diagnostic system",
          "status": "Not Started",
          "mscw": "Must"
        },
        {
          "name": "Implement on-save linting",
          "description": "Trigger linting process when a file is saved",
          "status": "Not Started",
          "mscw": "Should"
        }
      ]
    },
    {
      "name": "Extension Packaging and Distribution",
      "description": "Prepare the extension for distribution",
      "status": "In Progress",
      "mscw": "Must",
      "subtasks": [
        {
          "name": "Create extension icon and branding",
          "description": "Design an icon and branding elements for the extension",
          "status": "Not Started",
          "mscw": "Should"
        },
        {
          "name": "Write user documentation",
          "description": "Create comprehensive user guide and API documentation",
          "status": "Not Started",
          "mscw": "Must"
        },
        {
          "name": "Implement telemetry and error reporting",
          "description": "Add anonymous usage tracking and error reporting",
          "status": "Not Started",
          "mscw": "Could"
        },
        {
          "name": "Publish to VS Code Marketplace",
          "description": "Prepare and submit the extension to the VS Code Marketplace",
          "status": "Not Started",
          "mscw": "Won't"
        },
        {
          "name": "Set up GitHub Releases",
          "description": "Configure GitHub Releases for distributing the extension",
          "status": "Not Started",
          "mscw": "Should",
          "subtasks": [
            {
              "name": "Create first GitHub Release",
              "description": "Manually create the first GitHub Release with the .vsix file",
              "status": "Not Started",
              "mscw": "Must"
            },
            {
              "name": "Set up GitHub Actions for automated releases",
              "description": "Create a workflow to automate the release process",
              "status": "Not Started",
              "mscw": "Should"
            },
            {
              "name": "Update README with GitHub Release instructions",
              "description": "Add instructions for users to download the extension from GitHub Releases",
              "status": "Not Started",
              "mscw": "Must"
            }
          ]
        },
        {
          "name": "Package extension",
          "description": "Create a .vsix file for local installation",
          "status": "Not Started",
          "mscw": "Must",
          "subtasks": [
            {
              "name": "Install vsce",
              "description": "Install the VS Code Extension Manager",
              "status": "Complete",
              "mscw": "Must"
            },
            {
              "name": "Package extension",
              "description": "Use vsce to package the extension",
              "status": "Not Started",
              "mscw": "Must"
            }
          ]
        }
      ]
    }
  ]
}